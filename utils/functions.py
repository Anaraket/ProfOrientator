from utils.questions import questions_base, description


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞
def send_questions(number: int):
    message = questions_base[number - 1]
    return message["question"]


# –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def result(scores):
    combined_result = []
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è
    sorted_scores = sorted(scores.items(), key=lambda x: x[1], reverse=True)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª
    max_score = sorted_scores[0][1]
    max_categories = [category for category, score in sorted_scores if score == max_score]
    additional_text = (f"–ö–µ–π—Å—ã –ø–æ {', '.join([description[cat].split('‚Äî ')[1].split(':')[0] for cat in max_categories])}"
                       f" –º—ã —Å–∫–∏–Ω–µ–º —á–µ—Ä–µ–∑ 4 –¥–Ω—è ‚ù§Ô∏èüî•")

    for i, (category, score) in enumerate(sorted_scores):
        if score == max_score and i == 0:
            combined_result.append("–õ—É—á—à–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—åü•∞:")
        description_text = description[category]
        combined_result.append(f"<b><u>{score}/8</u></b> {description_text}")

    final_result = "\n\n".join(combined_result)
    return final_result, additional_text
